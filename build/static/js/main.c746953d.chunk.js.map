{"version":3,"sources":["AllUser.js","App.js","reportWebVitals.js","index.js"],"names":["AllUser","useForm","register","handleSubmit","errors","formState","onSubmit","data","a","console","log","header","body","userName","password","axios","post","headers","responseData","Form","action","Group","className","controlId","Control","type","placeholder","required","Button","variant","App","mobileInString","number","toString","valid","test","email","firstName","length","lastName","alert","Container","Row","Col","pattern","as","style","height","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c746953d.chunk.js","sourcesContent":["import { axios } from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport \"./App.css\";\n\nfunction AllUser() {\n    const { register, handleSubmit, formState: { errors } } = useForm();\n\n    const onSubmit = async data => {\n        console.log(data)\n\n        var header = {\n            \"Content-Type\": \"application/json\",\n        };\n\n        const body = {\n            \"userName\": data.userName,\n            \"password\": data.password\n        };\n\n        console.log(body);\n\n        const url = \"localhost:4200/api/user/login\";\n        const responseData = await axios.post(url, body, {\n            headers: header,\n        });\n        console.log(responseData);\n    };\n\n\n\n    return (\n        <div>\n            <h1>Login User</h1>\n            <Form action=\"\" onSubmit={handleSubmit(onSubmit)}>\n                <Form.Group\n                    className=\"mb-3\"\n                    controlId=\"exampleForm.ControlInput1\"\n                >\n                    <Form.Control type=\"text\" placeholder=\"UserName\" {...register(\"userName\", { required: true })} />\n                    {errors.userName && <span>userName is required</span>}\n                </Form.Group>\n                <Form.Group\n                    className=\"mb-3\"\n                    controlId=\"exampleForm.ControlInput1\"\n                >\n                    <Form.Control type=\"password\" placeholder=\"password\" {...register(\"password\", { required: true })} />\n                    {errors.password && <span>password is required</span>}\n                </Form.Group>\n                <Button type=\"submit\" variant=\"primary\">Submit</Button>\n            </Form>\n        </div>\n    );\n}\n\nexport default AllUser;","import { axios } from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Button, Col, Container, Form, Row } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport AllUser from \"./AllUser\";\nimport \"./App.css\";\n\nfunction App() {\n  const { register, handleSubmit, formState: { errors } } = useForm();\n\n  const onSubmit = async data => {\n    console.log(data)\n    const mobileInString = data.number.toString()\n    const regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    const valid = regex.test(data.email)\n\n    if (data.firstName.length < 2 || data.lastName.length < 2) {\n      alert(\"give a valid Name\")\n      return;\n    }\n    if (!valid) {\n      alert(\"please Give a valid email\")\n      return;\n    }\n    if (mobileInString.length < 10) {\n      alert(\"please give a valid Mobile number\")\n      return;\n    }\n\n    var header = {\n      \"Content-Type\": \"application/json\",\n    };\n\n    const url = \"localhost:4200/api/user/register\";\n    const responseData = await axios.post(url, data, {\n      headers: header,\n    });\n    console.log(responseData);\n\n    // alert('User added Successfully')\n    //     console.log(data)\n  };\n\n\n\n  return (\n    <div className=\"App\">\n\n      <Container>\n        <h1>Register User</h1>\n        <Row>\n          <Col>\n            <div>\n              <Form action=\"\" onSubmit={handleSubmit(onSubmit)}>\n                <Form.Group\n                  className=\"mb-3\"\n                  controlId=\"exampleForm.ControlInput1\"\n                >\n                  <Form.Control type=\"text\" placeholder=\"First name\" {...register(\"firstName\", { required: true })} />\n                  {errors.firstName && <span>firstName is required</span>}\n                </Form.Group>\n\n                <Form.Group\n                  className=\"mb-3\"\n                  controlId=\"exampleForm.ControlInput1\"\n                >\n                  <Form.Control type=\"text\" placeholder=\"Last name\" {...register(\"lastName\", { required: true })} />\n                  {errors.lastName && <span>lastName is required</span>}\n                </Form.Group>\n                <Form.Group\n                  className=\"mb-3\"\n                  controlId=\"exampleForm.ControlInput1\"\n                >\n                  <Form.Control type=\"text\" placeholder=\"UserName\" {...register(\"userName\", { required: true })} />\n                  {errors.userName && <span>userName is required</span>}\n                </Form.Group>\n                <Form.Group\n                  className=\"mb-3\"\n                  controlId=\"exampleForm.ControlInput1\"\n                >\n                  <Form.Control type=\"password\" placeholder=\"password\" {...register(\"password\", { required: true })} />\n                  {errors.password && <span>password is required</span>}\n                </Form.Group>\n                <Form.Group\n                  className=\"mb-3\"\n                  controlId=\"exampleForm.ControlInput1\"\n                >\n                  <Form.Control type=\"email\" placeholder=\"Email\" {...register(\"email\", { required: true })} />\n                  {errors.email && <span>email is required</span>}\n                </Form.Group>\n                <Form.Group\n                  className=\"mb-3\"\n                  controlId=\"exampleForm.ControlInput1\"\n                >\n                  <Form.Control type=\"text\" placeholder=\"Number\" pattern=\"[0-9]{10}\" {...register(\"number\", { required: true })} />\n                  {errors.number && <span>mobile Number is required</span>}\n                </Form.Group>\n                <Form.Group\n                  className=\"mb-3\"\n                  controlId=\"exampleForm.ControlInput1\"\n                >\n                  <Form.Control\n                    as=\"textarea\"\n                    placeholder=\"Address\"\n                    style={{ height: '100px' }}\n                  />\n                </Form.Group>\n                <Button type=\"submit\" variant=\"primary\">Submit</Button>\n              </Form>\n            </div>\n          </Col>\n          <Col>\n            <AllUser />\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}